# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Deploy website with all dependencies

on:
  push:
    branches: [ "main", "dev" ]

jobs:
  build:
    name: ðŸš€ Deploy website on push
    #runs-on: windows-latest
    runs-on: ubuntu-latest
    steps:
      - name: ðŸšš Get latest code
        uses: actions/checkout@v4.1.7
      - name: Set up Python 3.12
        uses: actions/setup-python@v5.1.0
        with:
          python-version: "3.12"
      # You can test your matrix by printing the current Python version
      - name: Download blog content
        run: |
          echo $(pwd)
          ls
          python -c "import sys; print(sys.version)"
          pip install -r scripts/requirements.txt
          python scripts/download_markdown_files.py ${{ secrets.WEBDAV_HOSTNAME }} ${{ secrets.WEBDAV_USERNAME }} ${{ secrets.WEBDAV_PASSWORD }} ${{ secrets.REMOTE_BASE_PATH }} assets

      - name: Setup Flutter SDK
        uses: flutter-actions/setup-flutter@v3.6  
        with:
          channel: stable
          version: 3.22.2
      
      # Note: This workflow uses the latest stable version of the Dart SDK.
      # You can specify other versions if desired, see documentation here:
      # https://github.com/dart-lang/setup-dart/blob/main/README.md
      # - uses: dart-lang/setup-dart@v1
      # - uses: dart-lang/setup-dart@v1

      - name: Install dependencies
        run: |
          git submodule update --init --recursive
          flutter pub get
          cd external/jotrockenmitlockenrepo
          flutter pub get

      # Uncomment this step to verify the use of 'dart format' on each commit.
      - name: Verify formatting
        continue-on-error: true
        run: dart format --output=none --set-exit-if-changed .

      # Consider passing '--fatal-infos' for slightly stricter analysis.
      - name: Analyze project source
        continue-on-error: true
        run: dart analyze

      # Your project will need to have tests in test/ and a dependency on
      # package:test for this step to succeed. Note that Flutter projects will
      # want to change this to 'flutter test'.
      - name: Run tests
        run: |
          flutter test

      - name: Enable flutter web
        run: |
          flutter config --enable-web

      # for production I do not use wasm yet!
      - name: 'Build Web App'
        if: github.ref == 'refs/heads/main'
        run: | 
          flutter build web --release --web-renderer canvaskit

      - name: 'Build Web App (WASM)'
        if: github.ref == 'refs/heads/dev'
        id: build-wasm
        continue-on-error: true
        run: | 
          should_run=false
          flutter build web --release --wasm
          should_run=true

      - name: ðŸ“‚ Sync files to main domain
        if: github.ref == 'refs/heads/main'
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.SERVER }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PW }}
          local-dir: "./build/web/"

      - name: ðŸ“‚ Sync files to dev domain
        if: github.ref == 'refs/heads/dev' && steps.build-wasm.outputs.should_run == 'true'
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.SERVER }}
          username: ${{ secrets.DEV_WASM_USERNAME }}
          password: ${{ secrets.DEV_WASM_PW }}
          local-dir: "./build/web/"

      - name: 'Build Web App'
        if: github.ref == 'refs/heads/dev'
        run: | 
          flutter build web --release --web-renderer canvaskit
      
      - name: ðŸ“‚ Sync files to dev domain
        if: github.ref == 'refs/heads/dev'
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.SERVER }}
          username: ${{ secrets.DEV_USERNAME }}
          password: ${{ secrets.DEV_PW }}
          local-dir: "./build/web/"